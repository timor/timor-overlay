From 5da2687f41b655005dcc3067796d87d418f11b30 Mon Sep 17 00:00:00 2001
From: timor <timor.dd@googlemail.com>
Date: Mon, 14 Dec 2020 16:50:13 +0100
Subject: [PATCH 10/12] disable custom-file syncing

---
 core/core-custom-settings.el | 16 ++++++----------
 core/core-spacemacs.el       | 10 +++++++---
 2 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/core/core-custom-settings.el b/core/core-custom-settings.el
index 45e5ba75c..e431d1745 100644
--- a/core/core-custom-settings.el
+++ b/core/core-custom-settings.el
@@ -33,16 +33,12 @@ complete that part see `spacemacs/initialize-custom-file-sync'."
   ;; has not been set by the user
   (when (null custom-file)
     (setq custom-file spacemacs--custom-file))
-  ;; initialize the cache file contents
-  (unless (or (not (string-equal custom-file spacemacs--custom-file))
-              (file-exists-p spacemacs--custom-file))
-    (with-temp-file spacemacs--custom-file
-      (let ((standard-output (current-buffer)))
-        (princ ";; -*- mode: emacs-lisp -*-\n")
-        (princ ";; This file is where Emacs writes custom variables.
-;; Spacemacs will copy its content to your dotfile automatically in the
-;; function `dotspacemacs/emacs-custom-settings'.
-;; Do not alter this file, use Emacs customize interface instead.\n\n")))))
+  ;; Actually load the file, or we are going to loose all customization if some
+  ;; clown touches customize-set-variable before the startup hook...
+  ;; Which seems to happen after package updates...
+  (when (and (stringp custom-file)
+             (file-exists-p custom-file))
+    (load custom-file)))
 
 (defun spacemacs/initialize-custom-file-sync ()
   "Initialize syncing of the custom file to the dotfile."
diff --git a/core/core-spacemacs.el b/core/core-spacemacs.el
index 20491440d..a569e53a1 100644
--- a/core/core-spacemacs.el
+++ b/core/core-spacemacs.el
@@ -250,11 +250,15 @@ Note: the hooked function is not executed when in dumped mode."
      ;; them in his/her ~/.spacemacs file
      (dotspacemacs|call-func dotspacemacs/user-config
                              "Calling dotfile user config...")
-     (dotspacemacs|call-func dotspacemacs/emacs-custom-settings
-                             "Calling dotfile Emacs custom settings...")
+     ;; Restore original behavior that will set anything that has been changed
+     ;; with setq as changed outside of customize.  We deactivated the writeback
+     ;; sync hook, so there shouldn't have been any changes here anyways.
+     ;; (when (file-exists-p custom-file) (load custom-file))
+     ;; (dotspacemacs|call-func dotspacemacs/emacs-custom-settings
+     ;;                         "Calling dotfile Emacs custom settings...")
      ;; don't write custom settings into the dotfile before loading them,
      ;; otherwise https://github.com/syl20bnr/spacemacs/issues/10504 happens
-     (spacemacs/initialize-custom-file-sync)
+     ;; Deactivated under nix (spacemacs/initialize-custom-file-sync)
      (run-hooks 'spacemacs-post-user-config-hook)
      (setq spacemacs-post-user-config-hook-run t)
      (when (fboundp dotspacemacs-scratch-mode)
-- 
2.29.3

