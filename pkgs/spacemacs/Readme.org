* Declarative Spacemacs

** Spacemacs Source
- github: timor/spacemacs, branch: nixos-adjustments

** ~dotfile~ argument
If given:
- ~dotfile~ is copied into the store
- ~NIX_DOTSPACEMACS~ is set to that.  During loading, this file is loaded.
- ~NIX_SPACEMACS_SUFFIX~ is set to a store-path dependent string.  This is used
  to set the location of the user-editable ~.spacemacs~ file into something like
  ~/.spacemacs.d/.spacemacs-FOO~.  On first invocation, this
- additional packages are determined using ~packagesFromDotfile~

** ~extraPackages~ argument
If given (emacs packages function)
- additional packages are added to the site-wide load path

** Difference between declarative usage and stateful usage
~packagesFromDotfile~ does not evaluate toggles, thus more packages are included
in the generated package set than necessary.  If ~nix-spacemacs-update-nix-env~
is used from inside spacemacs, on the other hand, the currently loaded and
configured layers' packages are "baked" instead.  This is more precise
* Customization
Syncing custom settings to dotfile is disabled, ~spacemacs--custom-file~ is
used for storing customization, and is loaded during ~emacs-startup-hook~.

NOTE: Spacemacs doc indicates that setting and loading ~custom-file~ is best
done in ~dotspacemacs/user-init~ context.  This is not run during
~emacs-startup-hook~, so we should be safe loading this during ~spacemacs/init~.

* Notes to self
Spacemacs internal loading procedure (init.el)
- load core-version.el
- load core-load-paths.el
  - modified ~spacemacs-start-directory~ to work from cwd
  - define ~spacemacs-nix-declared-p~ and ~spacemacs-nix-suffix~ here based on ~NIX_SPACEMACS_SUFFIX~
  - define ~spacemacs-nix-dotfile-path~ based on ~NIX_DOTSPACEMACS~
- load core-dumper.el
- require 'core-spacemacs (set up in core-load-paths.el)
  - requires pretty much all the core-* packages:
    - ...
    - core-configuration-layer
    - core-dotspacemacs
    - core-custom-settings
    - ...
- load lock-file
- call spacemacs/init
  - This currently performs a check whether the ~NIX_DOTSPACEMACS~ file is the
    same as ~dotspacemacs-filepath~
  - calls ~dotspacemacs/init~ from dotfile
  - calls ~dotspacemacs/user-init~ from dotfile
  - calls ~spacemacs/initialize-nix-custom-file~, which is set to always use
    separate custom-settings file
    if ~spacemacs-nix-declared-p~ is set
    - installs the dot-file if it does not exist
  - calls ~configuration-layer/initialize~
    - calls ~configuration-layer/elpa-directory~, which sets the subdir to
      ~NIX_SPACEMACS_SUFFIX~ if ~spacemacs-nix-declared-p~ is set
- ~configuration-layer/stable-elpa-init~ (unused)
- ~configuration-layer/load~
  - This is where the package loading heavy-lifting stuff happens
- calls ~spacemacs/setup-startup-hook~
  - this sets 'emacs-startup-hook, which, among other things:
    - ~dotspacemacs/user-config~
    - ~dotspacemacs/emacs-custom-settings~ -- replaced by loading ~custom-file~
      directly if it exists
    - sync custom file (commented out)
- ...
